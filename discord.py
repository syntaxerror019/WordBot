import requests
import threading

default_avatar = "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"

class Discord:
    def __init__(self, url):
        self.url = url
        
    def send_message(self, message, name="User", avatar=default_avatar):
        if avatar is None:
            avatar = default_avatar
        avatar_b64=f"data:image/png;base64,{avatar}"
        data = {
            "content": message,
            "username": name,
            "avatar": avatar_b64
        }
        threading.Thread(target=requests.post, args=(self.url,), kwargs={'json': data}, daemon=True).start()
